#+TITLE:       mpayer
#+AUTHOR:      kyle Three Stone
#+DATE:        <2018-01-24 Wed>
#+EMAIL:       kyleemail@163.com
#+OPTIONS:     H:3 num:t toc:t \n:nil @:t ::t |:t ^:t f:t TeX:t
#+TAGS:        Linux
#+CATEGORIES:  Linux

拷贝路径 [[https://blog.csdn.net/futurepeter/article/details/5316014][mplayer 参数说明]]

格式有点凌乱，待整理。 TODO

MPlayer 
名称 
概要 
说明 
一般注记 
播放选项 ( 仅用于 MPLAYER) 
分路器 / 媒体流选项 
OSD/ 字幕选项 
音频输出选项 ( 仅用于 MPLAYER) 
视频输出选项 ( 仅用于 MPLAYER) 
解码 / 滤镜选项 
编码选项 ( 仅用于 MENCODER) 
键盘控制 
SLAVE 模式协议 
文件 
示例 
BUGS 
作者 
标准声明 
名称 
mplayer − Linux下的电影播放器 
mencoder − Linux下的电影编码器 

概要 
mplayer [选项] [ 文件 | URL | 播放列表 | - ] 
mplayer [全局选项] 文件1 [特定选项] [文件2] [特定选项] 
mplayer [全局选项] {一组文件和选项} [针对该组的特定选项] 
mplayer [dvd|vcd|cdda|cddb|tv]://title [选项] 
mplayer [mms[t]|http|http_proxy|rt[s]p]:// [用户名:密码@]URL[:端口] [选 项] 
mencoder [选项] [ 文件 | URL | - ] [−o 输出文件] 
gmplayer [选项] [−skin skin] 

说明 
mplayer 是一个LINUX下的电影播放器, (也能运行在许多其它的Unices 和 非x86 的CPU 上, 参看文档). 它能使用本地的, XAnim, Win32 DLL的编解码器播放绝大 部分的MPEG/VOB, AVI, ASF/WMA/WMV, RM, QT/MOV/MP4, OGG/OGM, VIVO, FLI, NuppelVideo, yuv4mpeg, FILM 和RoQ 文 件. 你还能观看VideoCD,SVCD, DVD, 3ivx, DivX 3/4/5甚至WMV电影(不需要使用avifile库). 

MPlayer的另一个优越的特性是对输出设备的广泛的支持. 它可以使 用X11, XV, DGA, OpenGL, SVGAlib, fbdev, AAlib, DirectFB, 但你也可以使用GGI, SDL(由 此可以使用他们的所有驱动), VESA(所有VESA兼容的显卡，甚至可以 没 有X11), 某 些 低级的显卡相关的驱动(Matrox, 3Dfx和ATI)和一些硬件MPEG解码器卡, 比 如Siemens DVB, DXR2和DXR3/Hollywood+. 它们中绝大多数支持软件或硬件缩放, 所以你可以 享 受全屏电影. 

MPlayer 具有onscreen display(OSD)功能, 用来显示状态信息, 清晰放大反锯齿 带阴影的字幕和键盘控制的视觉反馈. 支持的字体包括欧洲语种/ISO 8859-1,2 ( 匈 牙 利语, 英语, 捷克语等等), 西里尔语和韩语, 可以播放10种格式的字幕文 件(MicroDVD, SubRip, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub 和 我 们 自 己 的: MPsub)和DVD字幕(SPU流, VobSub和隐藏字幕数据 表(Closed Captions)). 

mencoder (MPlayer的电影编码器)是一个简单的电影编码器, 设计用来把MPlayer 可 以播放的电影(见上面)编码成另一些MPlayer可以播放的格式(见下面). 它可 以通过1, 2或者3 pass的方式编码DivX4, XviD, libavcodec的编解码器支持的视 频格式和PCM/MP3/VBRMP3的音频. 进一步的它还拥有流复制的能力, 一个强大的 插件系统(crop, expand, flip, postprocess, rotate, scale, noise, rgb/yuv 转换)和更多. 

gmplayer 是使用图形用户界面的MPlayer. 它使用跟MPlayer相同的参数. 

一般注记 
参见HTML文档! 

每个’flag’选项都有一个对应的’noflag’选项, 比如−fs选项的对应选项是−nofs. 

你可以把所有选项放在配置文件中, mplayer每次运行时都会读取它们. 系统 范 围 的配置文件’mplayer.conf’在你的配置目录中, (比如/etc/mplayer或者/usr/ local/etc/mplayer), 用户特定的配置文件是’~/.mplayer/config’. 用户特 定 的 选 项优先于系统范围的选项, 而命令行选项优先于这两者. 配置文件的语法 是’选项=<参数>’, ’#’后面的都认为是注释. 启用没有参数的选项可以把参数设 为’yes’ 或者’1’, 而如果要禁用就把它们设置为’no’或者’0’. 甚至子选项也可 以通过这种方式设定. 

示例: 
# 默认使用Matrox驱动. 
vo=xmga 
# 我喜欢在看片子的时候练习倒立. 
flip=yes 
# 从多个png文件解码/编码, 以-mf启动 
mf= type=png:fps=25 

你也可以制作针对特定文件的配置文件. 如果你希望’movie.avi’这个文件有自己 的 配置文件, 创建一个叫’movie.avi.conf’的文件, 写上针对该文件的选项, 把 它放在~/.mplayer中或者该文件同一目录下. 

播放选项 ( 仅用于 MPLAYER) 
−, −use-stdin 

从标准输入读取数据. −idx选项无法与这个选项同时工作. 

−autoq <质量> (与−vf pp一起使用) 

根据可用的CPU空闲时间动态调整后期处理的级别. 你设定的数字是允许 使用的最高级别. 一般来说你可以使用一些比较大的数字. 你必须使用 不带参数的−vf pp才能使用它. 

−autosync <因子> 

基于音频延迟的检测逐步调整A/V同步. 设定−autosync 0, 也就是默 认 值, 将导致帧记时完全基于音频延迟的检测. 设定−autosync 1也是一 样, 但将会微妙的改变所使用的A/V修正算法. 设置大于1的值对那些 视 频 帧速率不均匀, 但用−nosound可以正常播放的电影一般会有帮助. 这 个值越大, 记时方法越接近于−nosound. 对于没有好的音频延迟检测功 能的声卡驱动试试用−autosync 30来平滑这个问题. 使用这个值时, 如 果出现大的A/V同步偏移, 只需要1或2秒就可以摆平. 对于任何声卡 驱 动, 打开这个选项的唯一缺点就是对于突然的A/V偏移的反应延迟时间. 

−benchmark 

在终端显示一些CPU使用率和丢帧数的统计信 息. 与−nosound 和−vo null联合使用可以用来评测视频解码器. 

−edl <文件名> 

在播放时启用编辑决定列表(EDL)的动作. 根据所给文件的内容, 可以跳 过视频, 静 音 和 取 消 静 音. 具 体 内 容 和 使 用 方 法 参 见DOCS/documentation.html#edl. 

−edlout <文件名> 

建立一个新文件并写入编辑决定列表(EDL)的记录. 在播放时, 当用户按 下’i’, 一个跳过下面两秒的记录将写入文件. 用户以后可以以此作为调 整EDL记录的出发点. 具体内容参见DOCS/documentation.html#edl. 

−enqueue (仅用于GUI) 

将命令行中的文件加入播放序列而不是立刻播放它们. 

−fixed-vo (BETA代码!) 

对 多 个 文件使用一个固定的视频系统(对所有文件初始化/释放一次). 所以对所有文件只使用一个窗口, 目前fixed-vo兼容的驱 动 有: x11, xv, xvidix, xmga, gl2, and svga. 

−framedrop (参见−hardframedrop) 

跳 过一些帧从而在慢的机器上实现A/V同步.视频滤镜不会应用到这些帧 上. 对于B帧解码也会完全跳过. 

−h, −help, −−help 

显示简短的选项摘要. 

−hardframedrop 

丢掉更多的帧(破坏解码). 导致图像破损! 

−identify 

用容易分析的格式显示文件参数. 调用的TOOLS/midentify脚 本 将 滤 除mplayer的其它输出而(但愿能)留下文件名. 

−input <命令> 

这 个选项可以用来配置输入系统的特定部分. 路径相对于~/.mplayer/. 

注意: 
自动重复功能目前只有游戏操纵杆支持. 
可用的命令有: 

conf=<文件> 

读取另外的input.conf. 如果没有给出路径名, 将 假 设 是~/ .mplayer. 

ar−delay 

在开始自动重复一个键之前等待多少毫秒(0代表禁用). 

ar−rate 

当自动重复是每秒重复多少次. 

keylist 

列出所有可以被绑定的键. 

cmdlist 

列出所有可以被绑定的命令. 

js−dev 

指定可用的游戏操纵杆设备(默认为/dev/input/js0). 

file 

从指定文件读取命令, 用于命名管道很有效. 

−lircconf <文件> 

指 定LIRC(Linux Infrared Remote Control, 参 见http://www.lirc.org)的配置文件, 如果你不喜欢默认的~/.lircrc的 话. 

−loop <数字> 

重复播放电影<数字>遍. 0表示不断重复. 

−menu (BETA代码) 

打开OSD菜单支持. 

−menu-root <参数> (BETA代码) 

指定主菜单. 

−menu-cfg <文件> (BETA代码) 

使用另外的menu.conf. 

−nojoystick 

关闭游戏操纵杆的支持. 默认是只要编译了就会打开. 

−nolirc 

关闭LIRC支持. 

−nortc 
关闭使用Linux的RTC(real-time clock − /dev/rtc)作为计时 器的功能. 

−playlist <文件> 

根据播放列表播放文件(每行一个文件或者Winamp或ASX格式). 

−quiet 
显示较少的输出和状态信息. 

−really−quiet 

显示更少的输出和状态信息. 

−sdp 
指定输入文件为描述一个RTP会话 的SDP(’Session Description Protocol’)文件, (参见http://www.live.com/mplayer/). 

−shuffle 

以随机顺序播放文件. 

−skin <skin目录> (BETA代码) 

从指定目录中装载skin(没有路径名). 

示例: 

−skin fittyfene 

尝 试Skin/fittyfene. 将 会 首 先 察 看/usr/local/share/mplayer/, 然后是~/.mplayer/. 

−slave 
这个选项打开slave模式. 这用来将MPlayer作为其它程序的后 端. MPlayer将从他的标准输入读取简单命令行, 而不再截获键盘事件. SLAVE模式协议部分将解释其语法. 

−softsleep 

使用高质量的软件计时器. 跟RTC同样精确且不需要特别权限. 代价是更 高的CPU消耗. 

−speed <0.01−100> 

设置播放速率. 

−sstep <秒> 

设定各帧显示之间的时间间隔. 用于幻灯片播放. 

分路器 / 媒体流选项 
−aid <标识> (参见 −alang选项) 

选 择音频频道 [MPEG: 0−31 AVI/OGM: 1−99 ASF/RM: 0−127 VOB(AC3): 128−159 VOB(LPCM): 160−191] MPlayer在冗长(-v)模式下会显示可用的 标识. 

−alang <两个字母的国家代码> (参见−aid选项) 

仅 用于DVD播放. 它选择DVD的音频语言并总是尝试播放与所给代码符合 的语言. 加上−v参数观察输出可以获得可用语言的列表. 

示例: 

−alang hu,en 

播放匈牙利语, 英语在没有匈牙利语时备用. 

−audio−demuxer <数字> (仅用于−audiofile) 

指定用于−audiofile的分路器. 分路器的标识 在demuxers.h 中. 使 用−audio−demuxer 17将指定.mp3检测. 

−audiofile <文件名> 

在看电影时播放外部文件(WAV, MP3或Ogg Vorbis)的音频. 

-audiofile-cache <kBytes> 

对-audiofile的文件流启用缓存, 使用指定大小的内存. 

−bandwidth <参数> 

设 定 网络流的最大带宽(用于服务器可以以不同带宽传送内容的情况). 当你以慢速连接观看流媒体实况时有用. 

−cdrom−device <设备路径> 

替代默认的CDROM设备名/dev/cdrom. 

−cache <kBytes> 

这个选项设定用多少内存(以kBytes为单位)作为播放文件/URL的预缓冲. 对速度慢的媒体特别有用(默认为−nocache). 

−cdda <选项1:选项2> 

这个选项用来调整MPlayer的CD音频读取特性. 
可用选项有: 

speed=<参数> 

设定CD转速 

paranoia=<0−2> 

设定谨慎级别 

0: 关闭检测 
1: 只进行重叠检测(默认) 
2: 完全数据修正和校检 

generic-dev=<参数> 

使用指定的通用SCSI设备 

sector-size=<参数> 

单位读取量 

overlap=<参数> 

将校检时的最小重叠搜索设置为<参数>个扇区. 

toc-bias 

假定TOC中报告的第1音轨的起始偏移量将按照LBA 0定位. 有些 东芝光驱需要这个来获得正确的音轨边界. 

toc-offset=<参数> 

给定位音轨时在报告的扇区数上再加上<参数>个扇区. 可以是负 数. 

(no)skip 

(不)接受不完整的数据重建. 

−channels <数字> 

改变播放的声道数, 如果没有设定默认值为’2’. 如果输出声道数比输入 声道数多时, 将插入空声道(但在将单声道混合为立体声时, 会把单声道 复 制到两个输出声道). 如果输出声道比输入声道少, 结果取决与所用 的音频解码器(−afm). MPlayer会要求解码器把音频解码到跟指定数 量 的声道. 由解码器来实现这个要求. 如果解码器的输出比要求的多, 多 余的声道会被去掉. 这个选项通常只有在播放AC3音频(比如DVD)的视频 时才显得重要. 在那时默认使用liba52解码并把音频适当的混合到需要 的输出声道. 

注意: 
这个选项可以被解码器(仅用于AC3)滤镜(surround)和音频输出驱动( 至 少OSS可以)接受. 
可用选项有: 

2 
Stereo 

4 
Surround 

6 
Full 5.1 

−chapter <场景标识>[-<结束的场景标识>] 

设 定 从 哪个场景开始播放. 也可以设定在哪个场景结束播放(默认值: 1). 示例可以在下面找到. 

−csslib <文件名> 

(老式DVD选项)这个选项用来替代libcss.so的默认位置. 

−cuefile <文件名> (参见−vcd) 

从指定的文件中描述的, CDRwin的(bin/cue文件格式)光盘 镜 像 中 播 放(S)VCD. 

−demuxer <参数> 

指 定 分路器类型. 分路器的标识定义在demuxers.h中. 使用−demuxer 17将指定.mp3检测. 

−dumpaudio (仅用于MPLAYER) 

将原始的音频压缩流复制到./stream.dump(用于mpeg/ac3). 

−dumpfile <文件名> (仅用于MPLAYER) 

指定MPlayer复制的输出文件. 应该 与−dumpaudio / −dumpvideo / −dumpstream一起使用. 

−dumpstream (仅用于MPLAYER) 

将原始流复制到./stream.dump. 当从DVD或网络上rip时候有用. 

−dumpvideo (仅用于MPLAYER) 

将原始的视频压缩流复制到./stream.dump(不是十分好用). 

vd://

<节目标识> 

告 诉MPlayer播放哪个电影(通过节目标识指定). 比如有时’1’是一部预 告片, 而’2’才是真正的电影. 

注意: 
有时DVD播放时需要进行交错/逐行扫描转换, 参见−vf pp=0x20000选项. 

−dvd−device <设备路径> 

替代默认的DVD设备名/dev/dvd. 

−dvdangle <视角标识> 

有 些DVD 碟 片中的场景可以从多个视角观看. 通过这个选项你可以告 诉MPlayer使用那个视角(默认值: 1). 示例可以在下面找到. 

−dvdauth <DVD设备> 

(老式DVD选项)打开指定设备的DVD认证. 

−dvdkey <CSS密钥> 

(老式DVD选项)当解码一个由DVD上复制的未解密的VOB文件时, 用这个选 项 提供解码VOB需要的CSS密钥(密钥在−dvdauth通过DVD设备认证时会显 示出来). 

−dvdnav (BETA代码!) 

强行使用libdvdnav. 

−forceidx 

指定重新生成索引. 对索引损坏的文件(不同步等等)有用. 可以进行 收 缩. 你能使用MEncoder永久性的修复索引(参见文档). 

−fps <参数> 

替代帧速率(如果文件头中没有该参数/参数是错误的)(浮点数). 

−frames <参数> 

只播放/转换前<参数>帧, 然后退出. 

−hr−mp3−seek (仅用于MP3) 

高 精度mp3搜索. 默认为: 在播放外部MP3文件时启用, 因为我们需要搜 索到非常精确的位置来保持A/V同步. 这种方法在后退搜索时特别 慢 − 它需要绕回开头来找到准确的帧. 

−idx (参见−forceidx) 

在 没有找到索引的情况下重建AVI文件的索引, 从而允许搜索. 对于损 坏的/不完整的下载, 或制作低劣的AVI. 

−mc <每帧秒数> 

每帧的最大A-V同步修正(以秒为单位). 

−mf <选项1:选项2:...> 

用来从多个PNG或JPEG文件解码. 
可用选项有: 

on 
打开多文件支持 

w=<参数> 

输出的宽度(自动检测) 

h=<参数> 

输出的高度(自动检测) 

fps=<参数> 

输出的帧速率(默认值: 25) 

type=<参数> 

输入文件的类型(可用类型: jpeg, png, tga, sgi) 

−ni (仅用于AVI) 

指定使用非交错的AVI分析器(用来处理某些质量差的AVI文件的播放). 

−nobps (仅用于AVI) 

不使用平均比特率值来维持A−V同步(AVI). 对某些文件头损坏的AVI文件 有帮助. 

−noextbased 

禁 用基于后缀名的分路器选择机制. 默认情况下, 当文件类型(分路器) 无法可靠检测时, (文件没有头部或者不够可靠), 将使用后缀名来选 择 分路器. 后备的基于内容的分路器总是可用的. 

−passwd <密码> (参见−user选项) 

设置http认证的密码. 

−rawaudio <选项1:选项2:...> 

用 这 个 选 项 你可以播放原始音频文件. 也可以用来播放不是44KHz 16Bit立体声的音频CD. 
可用选项有: 

on 
使用原始音频分路器 

channels=<参数> 

声道数 

rate=<参数> 

每秒采样率 

samplesize=<参数> 

以字节为单位的样本大小 

format=<参数> 

16进制的fourcc 

−rawvideo <选项1:选项2:...> 

用这个选项你可以播放原始视频文件. 
可用选项有: 

on 
使用原始视频分路器 

fps=<参数> 

每秒帧速率, 默认值为25.0 

sqcif|qcif|cif|4cif|pal|ntsc 

设置默认的图像大小 

w=<参数> 

以像素为单位的图像宽 

h=<参数> 

以像素为单位的图像高 

y420|yv12|yuy2|y8 

设置色彩空间 

format=<参数> 

16进制的色彩空间(fourcc) 

size=<参数> 

以字节为单位的帧大小 

−rtsp-stream-over-tcp 

与’rtsp://’URL一起用来指定最后结果输入的RTP和RTCP的包通过TCP流, (跟RTSP使用同一个TCP连接 ). 这个选项可以用于当你的Internet连接 不允许UDP包进入的情况. (参见http://www.live.com/mplayer/). 

−skipopening 

提过DVD打开(仅用于dvdnav). 

−sb <比特位置> (参见−ss选项) 

搜索到比特位置. 用于播放开始部分是垃圾的CDROM镜像/.VOB文件. 

−srate <Hz> 

指定音频播放速, 视频播放速度也会改变以保持a-v同步. MEncoder 会 把这个值传给lame用于重新采样. 

−ss <时间> (参见−sb选项) 

搜索到指定的时间位置. 

示例: 

−ss 56 

搜索到56秒处 

−ss 01:10:00 

搜索到1小时10分钟处 

−tv <选项1:选项2:...> 

这个选项会启用MPlayer的电视截取功能. 

注意: 
MPlayer 不 接受冒号所以在设备标识中用逗号代替. (例如.用hw.0,0代 替hw:0,0). 
虽然使用ALSA是你可以选择任何采样率, 但LAME音频编码器只能 对’ 标 准’ 的采样率进行编码. 如果你选择一个奇怪的采样率使用这个编码器 得到的.avi文件会没有声音. 
可用选项有: 

on 
使用电视输入 

noaudio 

没有声音 

driver=<参数> 

可用参数: dummy, v4l, bsdbt848 

device=<参数> 

设定默认的/dev/video0之外的设备 

input=<参数> 

设定默认的0(电视)之外的输入(参见输出的列表) 

freq=<参数> 

设定电视调谐器的频率(例如 511.250). 与频道参数不兼容. 

outfmt=<参数> 

电视调谐器的输出格式(yv12, rgb32, rgb24, rgb16, rgb15, uyvy, yuy2, i420) 

width=<参数> 

输出窗口的宽度 

height=<参数> 

输出窗口的高度 

fps=<参数> 

捕捉视频的帧速率(帧每秒) 

buffersize=<参数> 

设定以兆为单位的捕捉缓冲区的大小(默认值: 动态) 

norm=<参数> 

可用参数: PAL, SECAM, NTSC 

channel=<参数> 

把电视调谐器设定到<参数>频道. 

chanlist=<参数> 

可 用参数: europe-east, europe-west, us-bcast, us-cable, 等等 

channels=<频道>−<名称>,<频道>−<名称>,... 

设定频道的名称. 在名称中用_代替空格(或者玩引号 游 戏;-). 频 道 名 称 会用OSD显示, tv_step_channel, tv_set_channel 和tv_last_channel等命令将可以被遥控器(参见lirc)使用. 与 频率参数不兼容. 警告: 频道编号将出现在’频道’列表上, 从1 开始. 示例: 使 用tv://1,

tv://2

, tv_set_channel 1, tv_set_channel 2等等. 

[brightness|contrast|hue|saturation]=<−100−100> 

设置显卡的色彩均衡器. 

audiorate=<参数> 

设定音频捕捉比特率 

forceaudio 

即使v4l报告没有音频源也捕捉音频 

alsa 

从ALSA捕捉 

amode=<0−3> 

选择音频模式: 

0: mono 
1: stereo 
2: language 1 
3: language 2 

forcechan=<1−2> 

默 认情况下, 记录音频声道数由电视卡检察音频模式自动决定. 这个选项允许指定立体声/单声道记录而不管amode选项和v4l 返 回 的参数. 在电视卡不能报告正确的音频模式的时候可以用这 个选项解决麻烦. 

adevice=<参数> 

设置音频设备 

/dev/...用于OSS 
硬件标识用于ALSA 

audioid=<参数> 

选择捕捉卡的音频输出, 如果它有不止一个的话 

[volume|bass|treble|balance]=<0−65535> 

这些选项用来设定视频捕捉卡上的混音器参数. 如果你的卡 没 有混音器, 它们将没有效果. 

immediatemode=<布尔值> 

参数值为0表示同时捕捉和缓冲音频和视频(mencoder的默认值). 参数值为1(mplayer的默认值)表示只捕捉视频而让音频通过通过 环路电缆由电视卡输入声卡. 

mjpeg 

使 用硬件mjpeg压缩(如果芯片支持的话). 当使用这个选项的时 候, 你不需要设置输出窗口的宽和高, mplayer会根据抽样参数( 见下面)自动确定. 

decimation=<1,2,4> 

选择硬件mjpeg压缩的图像的尺寸: 

1: 全尺寸 704x576 PAL 704x480 NTSC 
2: 中等尺寸 352x288 PAL 352x240 NTSC 
4: 小尺寸 176x144 PAL 176x120 NTSC 

quality=<0-100> 

选择jpeg压缩的质量 
(全尺寸推荐使用quality < 60) 

−user <用户名> (参见−passwd选项) 

设定http认证的用户名. 

://<音轨> 

从设备或镜像文件中播放video CD音轨(参见−cuefile). 

−vid <标识> 

选择视频频道[MPG: 0−15 ASF: 0−255]. 

−vivo <子选项> (调试代码) 

指定.vivo分路器的音频参数(用于调试). 

OSD/ 字幕选项 
注意: 
参见−vf expand. 

−dumpmicrodvdsub (仅用于MPLAYER) 

把给定的字幕文件(由−sub选项设置)转换为MicroDVD字幕格式. 在当前 目录中创建一个dumpsub.sub文件. 

−dumpmpsub (仅用于MPLAYER) 

把给定的字幕文件(由−sub选项设置)转换为MPlayer的字幕格式, MPsub. 在当前目录中创建一个dump.mpsub文件. 

−dumpsrtsub (仅用于MPLAYER) 

把 给定的字幕文件(由−sub选项设置)转换为基于时间的SubViewer(SRT) 字幕格式. 在当前目录中创建一个dumpsub.srt文件. 

−dumpjacosub (仅用于MPLAYER) 

把给定的字幕文件(由−sub选项设置)转换为基于时间的JACOsub字 幕 格 式. 在当前目录中创建一个dumpsub.js文件. 

−dumpsami (仅用于MPLAYER) 

把 给 定的字幕文件(由−sub选项设置)转换为基于时间的SAMI字幕格式. 在当前目录中创建一个dumpsub.smi文件. 

−dumpsub (仅用于MPLAYER) (BETA代码) 

从VOB流中复制子字幕流. 参见-dump*sub和-vobsubout*选项. 

−ifo <vobsub的ifo文件> 

设置用于读取的包含VOBSUB字幕的调色板和帧尺寸的文件. 

−ffactor <数字> 

对字体的alpha映射图重新采样. 可设为: 

0 
普通白色字体 

0.75 

非常细的黑色边框(默认值) 

1 
细的黑色边框 

10 
粗的黑色边框 

−font <font.desc文件的路径> 

在另外目录你寻找OSD/SUB字体(默认的普通字体为: ~/.mplayer/font/ font.desc, 默认的FreeType字体为: ~/.mplayer/subfont.ttf). 

注意: 
对于FreeType, 这个选项指定文本字体文件的路径. 
−subfont-*选项只有当编译了FreeType支持才可用. 

示例: 

−font ~/.mplayer/arial−14/font.desc 
−font ~/.mplayer/arialuni.ttf 

−noautosub 

关闭字幕文件的自动载入功能. 

−overlapsub 

对所有字幕格式启用重叠字幕支持. 

−nooverlapsub 

对所有字幕格式禁用重叠字幕支持(默认行为是只对特定格式启用支持). 

−osdlevel <0−3> (仅用于MPLAYER) 

设定开始的OSD模式. 

0 
只有字幕 

1 
音量 + 搜索(默认) 

2 
音量 + 搜索 + 计时器 + 百分比 

3 
音量 + 搜索 + 计时器 + 百分比 + 总时间 

−sid <标识> (参见−slang选项) 

打开DVD字幕显示. 同时, 你必须设置一个对应于一种DVD字幕语言的 数 字(0−31). 至于可用字幕的列表, 可以加上−v选项并察看输出. 

−slang <两个字母的国家代码> (参见−sid选项) 

仅 用于DVD播放. 打开/选择DVD字幕语言. 至于可用字幕的列表, 可以 加上−v选项并察看输出. 

示例: 

−slang hu,en 

选择匈牙利语, 英语在没有匈牙利语时备用. 

−sub <字幕文件> 

使用/显示指定的字幕文件. 

−sub-bg-alpha <0−255> 

设置字幕和OSD背景的alpha通道值. 值越大代表越透明. 0是一个例外代 表完全透明. 

−sub-bg-color <0−255> 

设置字幕和OSD背景的颜色值. 目前字幕是灰度图像所以这个值相当于颜 色的亮度. 255代表白色0代表黑色. 

−subcc 显示DVD的隐藏字幕数据表(CC)字幕. 

它们不是VOB字幕, 它们是为听力障碍的人准备的特殊的ASCII字幕, 编 码在大多数区码为1的VOB的用户数据流中. CC字幕到目前为止还没有在 别的区码的DVD中发现. 

−subcp <编码页> 

如果你的系统支持iconv(3), 你可以用这个选项来设置字幕文件的编 码 页. 

示例: 

−subcp latin2 
−subcp cp1250 

−sub−demuxer <数值> (BETA代码) 

指定−subfile的字幕分路器的类型. 

−subdelay <参数> 

字幕延迟<参数>秒. 可以是负数. 

−subfont-autoscale <0−3> 

设置自动缩放模式. 

注意: 
0表示text-scale和osd-scale的参数为以点为尺寸的字体高度. 
可用模式有: 

0 
不自动缩放 

1 
按电影高度缩放 

2 
按电影宽度缩放 

3 
按电影对角线缩放(默认值) 

−subfont-blur <0−8> 

设置字体模糊半径(默认值: 2). 

−subfont-encoding <参数> 

设置字幕编码. 当设为’unicode’时, 字体文件中的所有字模都会被渲染 并使用unicode编码(默认值: unicode). 

−subfont-osd-scale <0−100> 

设置osd元素的自动缩放系数(默认值: 6). 

−subfont-outline <0−8> 

设置字体边框的宽度(默认值: 2). 

−subfont-text-scale <0−100> 

设置字幕文本的自动缩放系数(屏幕尺寸的百分比) (默认值: 5). 

−subfps <速率> 

设置字幕文件的帧/秒速率(浮点数), 默认值: 与电影同样的fps. 

注意: 
仅用于基于帧的SUB文件, 比如不能用于MicroDVD格式. 

−subfile <文件名> (BETA代码) 

目前没有用. 与−audiofile一样, 但用于字幕流(OggDS?). 

−subpos <0−100> (用于−vf expand) 

设置字幕在屏幕上显示的位置. 参数表示字幕的垂直位置位于屏幕的 百 分之多少. 

−subalign <0−2> 

设 置 字 幕相对于subpos如何对齐. 0表示顶部对齐(最初的/默认的行 为), 1表示中央对齐, 而2标识底部对齐. 

−subwidth <10−100> 

设置字幕在屏幕上显示的最大宽度. 对于电视输出有用. 参数表示字幕 宽度占屏幕宽度的百分之多少. 

−unicode 

告诉MPlayer以UNICODE格式处理字幕. 

−utf8 
告诉MPlayer以UTF8格式处理字幕. 

−sub-no-text-pp 

禁用载入字幕后的任何形式的文字后期处理. 用于调试. 

−vobsub <无后缀名的vobsub文件名> 

设 置用于字幕显示的VobSub文件. 这是无后缀名的完整路径名, 例如没 有’.idx’, ´.ifo’或者’.sub’. 

−vobsubid <0-31> 

设置VobSub字幕标识. 

−spualign <-1−2> 

设置spu(DVD/VobSub)字幕如何对齐. 参数值与-subpos相同, 特 别 的, -1表示在初始位置显示. 

−spuaa <模式> 

设 置DVD/VobSub的反锯齿/缩放模式. 加上16可以在原始和缩放帧尺寸 完全相同时强制进行缩放, 比如使用高斯模糊来平滑字幕. 可用 模 式 有: 

0 
不缩放(最快, 很丑) 

1 
近似缩放(好像坏了?) 

2 
完全缩放(慢) 

3 
二次线性缩放(默认值, 快速而且效果不坏) 

4 
使用软件缩放的高斯模糊(看起来很好) 

−spugauss <0.0−3.0> 

-spuaa 4使用的高斯模糊的可变参数. 越高表示越模糊. 默认值为1.0. 

音频输出选项 ( 仅用于 MPLAYER) 
−abs <参数> (已被放弃) 

替代音频驱动/声卡的缓冲区大小检测, 仅用于−ao oss 

−af <滤镜1[=选项],滤镜2,...> 

激活一个逗号分隔的带参数的音频滤镜列表. 
可用滤镜有: 

resample[=srate[:sloppy][:type]] 

将音频流的采样率变为整数值srate(Hz). 它只支持16 bit低 位 在前格式. 

channels[=nch] 

将声道变为nch个输出声道. 如果输出声道数比输入声道数多时, 将插入空声道(但在将单声道混合为立体声时, 会把单声道复 制 到两个输出声道). 如果输出声道数比输入声道数少, 多余的声 道会被去掉. 

format[=bps,f] 

选择插件层输出格式为f, 样本比特率为bps. 选项bps是一个整 数表示每个样本的字节数. 格式f是下面几个字符串的连接: 
alaw, mulaw或imaadpcm 
float或int 
unsigned或signed 
le或be(低位或高位在前) 

volume[=v:sc] 

选 择输出音量级别.这个选项是不可重入的, 所以对每个音频流 只能使用一次. 

v: 对流中所有声道的增益, 以dB为单位. 增益可以从-200dB 到+40dB(-200dB 完 全 静音completely而+40dB等于放大1000 倍). 
sc: 启用软修饰. 

pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...] 

任意混合声道, 细节参见DOCS/sound.html. 

n: 输出声道数(1 - 6). 
lij: 输出声道i中混合多少输入声道j的成分. 

sub[=fc:ch] 

增加副低音声道. 

fc: 低通滤波器的剪除频率(20Hz to 300Hz)默认值为60Hz. 
ch: 副声道的声道号. 

surround[=d] 

矩阵编码的环绕音效解码器, 能用于许多2声道文件. 

d: 以毫秒为单位的后部扬声器的延迟时间(0ms到1000ms), 默 认值为15ms. 

delay[=ch1:ch2:...] 

延迟声音的输出. 以百万分之一秒为单位设置每个声道的延迟(0 到1000之间的浮点数). 

−af-adv <force=(0−3):list=(filters)> (参见−af选项) 

设置高级音频滤镜选项: 

force=<0-3> 

将插入音频滤镜的方式指定为下面之一: 

0: 完全自动插入滤镜(默认) 
1: 速度优化 
2: 精度优化 
3: 关闭自动插入 

list=<滤镜> 

与−af相同(参见−af选项). 

−ao <驱动1[:设备],驱动2,...[,]> 

设置可用的音频输出驱动的优先级列表(可以加上设备). ´设备’ 也 用 于SDL, 那里它表示子驱动. 

注意: 
要获得完整的可用驱动列表, 参考−ao help. 
如果列表结尾有一个’,’ 它将可以使用没有列出的驱动作为后备. 

示例 

−ao oss:/dev/dsp2,oss:/dev/dsp1, 

尝试使用指定声音设备的OSS而把其它设置作为后备 

−ao sdl:esd 

设置SDL的子驱动 

−aofile <文件名> 

用于−ao pcm的文件. 

−aop <list=插件1,插件2...:选项1=参数1:选项2=参数2...> 

设置音频插件和他们的选项(参见文档). 
可用选项有: 

list=[插件] 

逗 号 分隔的插件列表(resample, surround, format, volume, extrastereo, volnorm) 

delay=<秒> 

插件例子, 没有用 

format=<格式> 

输出格式(仅用于format插件) 

fout=<Hz> 

输出频率(仅用于resample插件) 

volume=<0−255> 

音量(仅用于volume插件) 

mul=<参数> 

立体声系数(默认值: 2.5)(仅用于extrastereo插件) 

softclip 

使用’软修饰’压缩功能(仅用于volume插件) 

−delay <秒> 

以秒为单位延迟音频(可以是+/−浮点值). 

−format <0−8192> 

选择滤镜层使用的输出格式 (依据libao2/afmt.h中的定义): 

1 
Mu-Law 

2 
A-Law 

4 
Ima-ADPCM 

8 
Signed 8-bit 

16 
Unsigned 8-bit 

32 
Unsigned 16-bit (低位优先) 

64 
Unsigned 16-bit (高位优先) 

128 
Signed 16-bit (低位优先) 

256 
Signed 16-bit (高位优先) 

512 
MPEG (2)音频 

1024 

AC3 

4096 

Signed 32-bit (低位优先) 

8192 

Signed 32-bit (高位优先) 

−mixer <设备> 

这个选项让MPlayer使用/dev/mixer之外的设备进行混音. 

−nowaveheader (仅用于-ao pcm) 

不包括wave文件头. 用于原始RAW PCM. 

视频输出选项 ( 仅用于 MPLAYER) 
−aa* (仅用于−vo aa) 

你可以运行 mplayer −aahelp 来获得一份可用选项的解释的列表. 

−bpp <深度> 

使用与自动检测结果不同的颜色深度. 不 是 所 有−vo 驱 动 都 支 持 它(fbdev, dga2, svga, vesa). 

−brightness <−100−100> 

调 整 视频输出的亮度(默认值为0). 它改变视频信号中RGB组份的亮度, 从黑到白. 

−contrast <−100−100> 

调整视频输出的对比度(默认值为0). 工作方式与brightness差不多. 

−dfbopts <参数> (仅用于−vo directfb2) 

设置directfb驱动的参数列表. 

−display <name> 

设置你希望使用的X server的hostname和display number. 

示例: 

−display xtest.localdomain:0 

−double 

启用双缓冲. 通过在内存里储存两帧来解决闪烁问题, 在显示一帧的 同 时 解码另一帧. 会影响OSD. 需要单一缓冲方式两倍的内存. 所以不能 用于显存很少的显卡. 

−dr 
打开直接渲染功能(不是所有的编解码器和视频输出都支持)(默 认 为关闭). 警告: 可能导致OSD/字幕损坏! 

−dxr2 <选项1:选项2:...> 

这个选项用来控制dxr2驱动. 注意: 现在当你播放非MPEG1/2格式时lavc 滤镜会自动插入, 所以现在所有MPlayer支持的格式都可以播放(如果 你 有实时编码所需要的CPU速度). dxr2的叠加芯片的质量相当差不过默认 设置应该可以用于每一个人. OSD可能可以通过使用colorkey的绘制 方 法在叠加(不能用于TV)输出中实现. 使用默认的colorkey设定你可能获 得各种效果, 一般情况下你可能看到colorkey环绕在字符周围或者其 它 可笑的效果. 但只要你适当的调节colorkey的设定你应该可以获得可接 受的效果. 

ar-mode=<参数> 

长宽比模式(0 = 普通, 1 = pan scan模式, 2 = letterbox 模 式(默认)) 

iec958−encoded/decoded 

iec958输出模式 

mute 

声音输出静音 

ucode=<参数> 

microcode的路径 

TV Out 

75ire 

启用7.5IRE 

bw 
黑白电视输出 

color 

彩色电视输出 

interlaced 

交错电视输出 

macrovision=<参数> 

macrovision 模 式(0 = 关闭(默认值), 1 = agc, 2 = agc 2 colorstripe, 3 = agc 4 colorstripe) 

norm=<参数> 

电视制式(ntsc(默认), pal,pal60,palm,paln,palnc) 

square/ccir601−pixel 

电视像素模式 

叠加 

cr-[left|right|top|bot]=<−20−20> 

调整叠加裁减 

ck-[rgb]min=<0−255> 

color key参数最小值 

ck-[rgb]max=<0−255> 

color key参数最大值 

ck-[rgb]=<0−255> 

color key参数 

ignore−cache 

不使用VGA缓存 

ol-osd 

启用叠加模式的osd hack 

ol[hwxy]−cor=<参数> 

调整叠加尺寸和位置, 如果它跟窗口匹配不够完美 

overlay 

启用叠加 

overlay-ratio=<1−2500> 

调整叠加模式(默认值为1000) 

update−cache 

重建VGA缓存 

−fb <设备> (仅用于fbdev或者DirectFB) 

设置使用的帧缓冲设备. 默认为/dev/fb0. 

−fbmode <模式名> (仅用于fbdev) 

把视频模式设为/etc/fb.modes中标记为<模式名>的模式 

注意: 
VESA帧缓冲不支持改变显示模式. 

−fbmodeconfig <文件名> (仅用于fbdev) 

使用这个配置文件取代默认的/etc/fb.modes. 只对fbdev驱动有效. 

−forcexv (仅用于SDL) 

指定使用XVideo. 

−fs 
全屏播放(电影显示在中央, 四周填充黑色条边). 用’f’键触 发( 不是所有的视频输出都支持它). 参见−zoom. 

−fsmode-dontuse <0-31> (已放弃) (使用−fs选项) 

如果你还有全屏问题试试这个选项. 

−fstype <type1,type2,...> 

设置可用的全屏层设置模式的优先级列表. 

默 认的次序是"layer,stays_on_top,above,fullscreen". 如果设置的 模式不正确或不支持会使用后备项. 
如果你遇到全屏窗口被别的窗口覆盖的问题试试设置不同的顺序. 

注意: 
参考−fstype help列出的全部可用模式的列表. 

−geometry x[%][:y[%]] or [WxH][+x+y] 

调整屏幕输出的初始位置. x和y代表从屏幕右上角到显示图像右上角的 距离, 以像素为单位. 不过如果在参数后有百分号记号它将把参数理解 为该方向上的屏幕尺寸比例. 它也支持标准的X −geometry的标准选 项 格式. 参数必须为整数. 

注意: 这个选项只有一个vo支持: xv. 

示例: 

50:40 

把窗口放在x=50, y=40处 

50%:50% 

把窗口放在屏幕中央 

100% 

把窗口放在屏幕左上角 

100%:100% 

把窗口放在屏幕左下角 

−guiwid <窗口标识> 

这 告 诉GUI 也使用一个X11窗口并把自己粘到视频窗口的下方, 在将一 个mini-GUI嵌入到浏览器时(比如mplayer插件)有用. 

−hue <−100−100> 

调整视频信号的色相(默认: 0). 你可以通过这个选项得到负片效果 的 图像. 

−icelayer <0−15> (仅用于icewm) 

设置icewm下mplayer的全屏窗口层. 

0 
Desktop 

2 
Below 

4 
Normal 

6 
OnTop 

8 
Dock 

10 
AboveDock 

12 
Menu (默认) 

−jpeg <选项1:选项2:...> (仅用于−vo jpeg) 

设置JPEG输出的选项. 
可用选项有: 

[no]progressive 

设置标准的或渐进的JPEG. 

[no]baseline 

设置是否使用基线. 

optimize=<参数> 

优化因子[0-100] 

smooth=<参数> 

平滑因子[0-100] 

quality=<参数> 

质量因子[0-100] 

outdir=<参数> 

保存JPEG文件的目录 

−monitor_dotclock <dotclock (or pixelclock) range> (仅用于fbdev和vesa) 

察看etc/example.conf和DOCS/video.html来进一步了解信息. 

−monitor_hfreq <水平频率范围> (仅用于fbdev和vesa) 

−monitor_vfreq <垂直频率范围> (仅用于fbdev和vesa) 

−monitoraspect <长宽比> 

设置你的显示器或电视屏幕的长宽比, 参见用于电影长宽比的−aspect选 项. 

示例: 

−monitoraspect 4:3或者1.3333 
−monitoraspect 16:9或者1.7777 

−nograbpointer 

VidMode改变(−vm)后不截获鼠标焦点, 用于多输出头设置. 

−nokeepaspect 

缩 放X11 窗 口 时 不 保持窗口的长宽比(只工作于−vo x11, xv, xmga 和xvidix而且你的窗口管理器必须理解window aspect hints.). 

−noslices 

禁用把视频分隔成16像素高的条/带绘制的方式, 而是一次绘制整个 帧. 可 能更快或更慢, 取决于显卡/缓存. 它只对libmpeg2和libavcodec编 解码器有效. 

−panscan <0.0−1.0> 

启用Pan & Scan功能, 也就是为了在4:3的显示器上显示16:9, 把电影的 边 缘 切 掉来获得4:3的, 与屏幕匹配的图像的方法. 这个功能只能用 于xv, xmga, mga和xvidix视频输出驱动. 
参数用来控制切掉多少图像. 

−rootwin 

在根窗口(桌面背景)中播放电影而不是重新打开一个新窗口. 只 能 用 于x11, xv, xmga和xvidix驱动. 

−saturation <−100−100> 

调 整视频输出的饱和度(默认值: 0). 你可以通过这个选项获得灰度输 出. 

−screenw <像素> −screenh <像素> 

如果你使用的输出驱动无法获得屏幕分辨率(fbdev/x11和/或者 TVout) ，你可以在这里设置水平和垂直分辨率. 

−stop_xscreensaver 

在启动是关闭xscreensaver在退出时再打开它. 

−vm 
尝试改变到更合适的视频模式. dga, x11/xv (XF86VidMode)和sdl 输出驱动支持. 

−vo <驱动1[:设备],驱动2,...[,]> 

设置可用的视频输出驱动的优先级列表(可以加上设备). ´设备’ 也 用 于SDL和GGI, 那里它表示子驱动. 

注意: 
要获得完整的可用驱动列表, 参考−vo help. 
如果列表结尾有一个’,’ 它将可以使用没有列出的驱动作为后备. 

示例: 

−vo xmga,xv, 

先尝试Matrox内核驱动, 然后Xv驱动, 然后其它 

−vo sdl:aalib 

设置SDL子驱动 

−vsync 
启用vesa的VBI支持. 

−wid <窗口标识> 

告 诉MPlayer 使 用 一 个X11窗口, 在把MPlayer嵌入浏览器是有用(比 如plugger扩展). 

−xineramascreen <0−...> 

在Xinerama配置时，(就是一个单一桌面展开在多个显示器上)，这个 选 项告诉MPlayer把电影显示在哪个屏幕上. 

−z <0−9> 

设置PNG输出的压缩级别(仅用于−vo png) 

0 
不压缩 

9 
最大压缩 

−zrbw (仅用于−vo zr) 

黑 白 显示(用于优化性能, 这个选项可以跟属于FFmpeg家族的编解码器 的’黑白解码’的选项联合使用). 

−zrcrop <[宽]x[高]+[x偏移]+[y偏移]> (仅用于−vo zr) 

选择显示输入图像的一部分, 使用多个这样的选项就启动了cinerama 模 式. 在cinerama模式下电影分布在多个电视(或投影仪)来创造一个更大 的屏幕. 在第n个−zrcrop后面的选项应用于第n个MJPEG解码卡, 每一个 编码卡至少需要有一个−zrcrop选项加上一个−zrdev选项. 察看−zrhelp 的输出和文档的Zr部分可以找到示例. 

−zrdev <设备> (仅用于−vo zr) 

设置你的MJPEG编码卡使用的设备文件名, 默认情况下这个驱动将使用它 找到的第一个v4l设备. 

−zrfd (仅用于−vo zr) 

指 定使用简化取样: 简化取样由−zrhdec和−zrvdec设置, 一般只有在硬 件缩放能把图像延展到原始尺寸时才使用. 使用这个选项指定使用简 化 取样. 

−zrhelp (仅用于−vo zr) 

显示所有−zr*选项列表, 他们的默认值和使用cinerama模式的例子. 

−zrnorm <制式> (仅用于−vo zr) 

设置制式为PAL/NTSC, 默认值为’不改变’ 

−zrquality <1−20> (仅用于−vo zr) 

从1到20的数值代表jpeg编码质量. 1的质量最好而20的质量非常差. 

−zrvdec <1,2,4> −zrhdec <1,2,4> (仅用于−vo zr) 

垂直/水平简化取样: 驱动只会把输入图像的每2或4行/点发送到MJPEG编 码卡, 而使用MJPEG卡的缩放器把图像回复到原有尺寸. 

−zrxdoff <x显示位移>, −zrydoff <y显示位移> (仅用于−vo zr) 

如果电影比电视屏幕小, 这些选项控制电影相对于屏幕左上角的显示 位 置. 默认情况下电影放在中央位置. 

解码 / 滤镜选项 
−ac <[-]编解码器1,[-]编解码器2,...[,]> 

设置可用编解码器的优先级列表, 按照它们在codecs.conf中的编解码器 名称. 在名称前加’-’表示忽略该编解码器. 

注意: 
全部可用编解码器的完整列表参见−ac help的输出. 
如果列表结尾有一个’,’ 将可以使用没有列出的编解码器作为后备. 

示例: 

−ac mp3acm 

指定使用l3codeca.acm MP3编解码器 

−ac mad, 

先尝试libmad, 其它作为后备 

−ac hwac3,a52, 

先尝试硬件AC3输出, 然后是软件AC3编解码器, 最后是其它 

−ac -ffmp3, 

尝试除了FFmpeg的MP3解码器之外的所有解码器 

−afm <驱动1,驱动2,...> 

设置可用的音频驱动优先级列表, 按照它们在codecs.conf中的驱 动 名 称. 当都不可用是使用默认后备驱动. 

注意: 
全部可用编解码器的完整列表参见−afm help的输出. 

示例: 

−afm ffmpeg 

先尝试FFmpeg的libavcodec(mp1/2/3)编解码器 

−afm acm,dshow 

先尝试Win32编解码器 

−aspect <比率> 

设置电影的长宽比. MPEG文件会自动检测, 但大多数AVI文件不会. 

示例: 

−aspect 4:3或−aspect 1.3333 
−aspect 16:9或−aspect 1.7777 

−flip 
上下翻转图像. 

−lavdopts <选项1:选项2:...> (调试代码) 

如果使用libavcodec解码, 你可以在这里设置参数. 

示例: 

−lavdopts bug=1 

注意: 
只要加上你想要启用的项目的参数即可. 
可用选项有: 

ec 
错误隐藏: 

1: 对损坏的MB使用强柔化马赛克滤镜 
2: MV重复搜索(很慢) 
3: 所有(默认) 

er=<参数> 

错误恢复: 

0: 禁用 
1: 小心 (用于损坏的编码器) 
2: 正常 (默认) (用于正常的编码器) 
3: 扩张性的 (更多检查但可能即使对有效比特流也导致问题) 
4: 非常扩张性的 

bug=<参数> 

手工绕过编码器bug: 

0: 无 
1: 自动检测bugs (默认) 
2 (msmpeg4v3): 由老式lavc生成的msmpeg4v3文件(不自动 检 测) 
4 (mpeg4): xvid交错bug(如果fourcc==XVIX会自动检测) 
8 (mpeg4): UMP4(如果fourcc==UMP4会自动检测) 
16 (mpeg4): padding bug(自动检测) 
32 (mpeg4): 非法vlc bug(每个fourcc都自动检测) 
64 (mpeg4): XVID和DIVX qpel的bug(每个fourcc/版本都自动 检测) 
128 (mpeg4): 老的标准的qpel(每个fourcc/版本都自动检测) 
256 (mpeg4): 另一个qpel的bug(每个fourcc/版本都自动检 测) 
512 (mpeg4): direct-qpel-blocksize的bug(每个fourcc/ 版 本都自动检测) 
1024 (mpeg4): edge padding的bug(每个fourcc/版本都自动 检测) 

idct=<0−99> 

(参见lavcopts) 想要最好的解码质量应该在编码和解码时使 用 相同的idct算法. 不过这可能会牺牲一些精确性. 

gray 

只解码灰度图像(比彩色解码快一点) 

−noaspect 

禁用电影长宽比自动尝试. 

−nosound 

不播放/编码声音. 

−pp <质量> (参见−vf pp选项!) 

设 置DLL的后期处理级别. 这个选项不能用于MPlayer的后期处理滤镜, 但可以用于有内部后期处理例程的Win32 DirectShow DLL. 

−pp的参数范围依编解码器不同, 大部分为0−6, 0=禁用 6=最慢/最好. 

−pphelp (参见−vf pp选项) 

列出可用后期处理滤镜和他们的使用方法简介. 

−ssf <mode> 

设置SwScaler参数. 

示例 

−vf scale −ssf lgb=3.0 

lgb=<0−100> 

高斯模糊滤镜(亮度) 

cgb=<0−100> 

高斯模糊滤镜(色度) 

ls=<0−100> 

锐化滤镜(亮度) 

cs=<0−100> 

锐化滤镜(色度) 

chs=<h> 

水平色度偏移 

cvs=<v> 

垂直色度偏移 

−stereo <模式> 

选择MP2/MP3立体声输出模式. 

0 
立体声 

1 
左声道 

2 
右声道 

−sws <软件缩放类型> (参见−vf scale选项) 

这个选项用来设置−zoom选项使用的软件缩放的质量(还有速度, 相 对 的). 用于x11或其它没有硬件加速的视频输出. 可用选项有: 

注意: 
对于−sws 2和7, 可以用−vf scale的缩放参数(p)来设置锐化(0(柔化) − 100(锐化)), 对于−sws 9, 这个参数设置滤镜长度参数(1 − 10). 

0 
快速二次线性(默认) 

1 
二次线性 

2 
二次立方(质量很好) 

3 
实验中 

4 
最短距离 (bad quality) 

5 
区域 

6 
亮度二次立方/色度二次线性 

7 
高斯 

8 
sincR 

9 
lanczos 

10 
双三次样条曲线 

−vc <[-]编解码器1,[-]编解码器2,...[,]> 

设置可用编解码器的优先级列表, 按照它们在codecs.conf中的编解码器 名称. 在名称前加’-’表示忽略该编解码器. 

注意: 
全部可用编解码器的完整列表参见−vc help的输出. 
如果列表结尾有一个’,’ 将可以使用没有列出的编解码器作为后备. 

示例: 

−vc divx 

指定使用Win32/VFW DivX编解码器, 没有后备 

−vc divx4, 

先尝试divx4linux编解码器, 然后使用后备 

−vc -divxds,-divx, 

尝试除了Win32 DivX编解码器之外的编解码器 

−vc ffmpeg12,mpeg12, 

尝 试libavcodec的MPEG1/2编解码器, 然后尝试libmpeg2, 然后 其它 

−vf <...,滤镜3[=选项],滤镜2,滤镜1> 

激活一个反序排列的逗号分隔的视频插件和它们的参数的列表. 

注意: 
参数是可选的, 当被省略时, 有些会设为默认值. 使用’-1’保持 默 认 值. 参数w:h标识宽度x高度, 以点为单位, x:y表示相当图像左上角x;y 的位置. 
全部可用插件的完整列表参见−vf help的输出. 
可用插件有: 

crop[=w:h:x:y] 

切割图像的指定部分其余丢弃. 用于去掉宽银幕电影的黑边. 

w,h: 切割部分的宽和高, 默认值为原始的宽度和高度. 
x,y: 切割部分的位置, 默认值是中央. 

cropdetect[=0−255] 

计算必要的切割参数并把推荐值显示在标准输出上. 极限值 的 设置可以从无(0)到所有(255).(默认值: 24) 

rectangle[=w:h:x:y] 

在 图 像 的指定坐标出绘制一个指定宽度和高度的矩形(用来实 验crop的参数). 

w,h: 宽度和高度(默认值: -1, 保证边界仍然可见的最大可能 宽度). 
x,y: 左上角坐标(默认值: -1, 最左最上) 

这个插件会响应input.conf中的’change_rectangle’指令, 需 要两个参数. 第一个参数可以是0表示w, 1表示h, 2表示x或者3 表示y. 第二个参数标识每次改变目标矩形边界的点数. 

expand[=w:h:x:y:o] 

把 电 影的分辨率扩展(不缩放)到指定的值并把原始图像放在坐 标x, y处. 可以用获得的黑带显示字幕/OSD. 

w,h: 扩展后的宽度, 高度(默认值: 原始的宽度, 高度) 
x,y: 扩展后的图像中原始图像的位置(默认值: 中央) 
o: OSD/字幕渲染 0: 禁用(默认值) 1: 启用 

w和h的 负 参 数 视 为 相 对 原 始 尺 寸 的 偏 移, 例 如expand=0:-50:0:0在图像底部增加50个像素的边界. 

flip 

上下翻转图像. 参见−flip选项. 

mirror 

沿Y轴镜像图像. 

rotate[=<0-7>] 

+/− 90度的旋转并翻转(可选)图像. 参数为4-7之间的旋转只有 当电影的形状是纵向而不是横向时. 

scale[=w:h[:c[:p]]] 

使用软件缩放(很慢)来缩放图像并进行YUV<−>RGB色彩空间转换( 参见−sws参数). 

w,h: 缩放后的新宽度/高度(默认值: 原始的宽度, 高度) 注意: 如果使用了−zoom, 而后继的滤镜(包括libvo)不支 持缩放, 那么它的默认值为d_width/d_height! -1: 原始的width/height 0: 缩放后的d_width/d_height -2: 用另外尺度和预放大的长宽比计算w/h. -3: 用另外尺度和原始的长宽比计算w/h. 
c: 色度抽样 0: 使用所有可用的输入行的色度 1: 使用每2个输入行的色度 2: 使用每4个输入行的色度 3: 使用每8个输入行的色度 
p: 缩放参数(取决于所用的缩放模式) 对于-sws 2(二次立方)这表示锐化(0 (柔化) - 100 ( 锐 化)) 对于-sws 7(线性)这表示锐化(0(柔化) - 100(锐化)) 对于-sws 9(lanczos)这表示滤镜长度(1 - 10) 0表示(按 长宽比)缩放的目标w/h. (默认值: 原始w/h, 与−zoom同时 使 用表示目标w/h), 可选用色度采样(c从0到3)和设置缩放参数. (细节参见−sws选项) 

yuy2 

指定使用YV12/I420或422P到YUY2的软件转换. 用于当显卡/ 驱 动显示YV12速度慢而YUY2速度快的情况. 

yvu9 

指定使用YVU9到YV12的软件转换. 不管软件缩放的设置. 

rgb2bgr[=swap] 

RGB 24/32 <−> BGR 24/32色彩空间转换. 

swap: 同时进行R <−> B互换. 

palette 

使用调色板进行RGB/BGR 8 −> 15/16/24/32bpp色彩空间转换. 

format[=fourcc] 

限制下一个插件使用的色彩空间而不进行任何转换. 与scale插 件一起用于一次真实转换. 

fourcc: 类似rgb15, bgr24, yv12等等的格式(默认值: yuy2) 

pp[=滤镜1[:选项1[:选项2...]]/[-]滤镜...] 

这 个选项开启MPlayer的内部后期处理滤镜的使用, 同时提供一 个你可以向有名字的滤镜传送选项的接口. 可用滤镜的列表 参 见−pphelp的输出. 
注意每一个子滤镜都必须用一个/记号分隔. 
所有滤镜默认作用于’c’(色度). 
在选项后面可以加上一个’:’和一个字母表示它的作用范围: 

a: 如果CPU太慢则自动关闭滤镜. 
c: 同时进行色度处理. 
y: 不进行色度处理(只进行亮度处理). 

示例: 

−vf pp=hb/vb/dr/al/lb 
−vf pp=hb/vb/dr/al 
使用除了亮度/对比度修正之外的默认滤镜: 
−vf pp=de/−al 
使用默认滤镜和时间噪音消除: 
−vf pp=de/tn:1:2:3 
仅 对亮度柔化马赛克并根据CPU可用时间打开或关闭垂直柔化 马赛克: 
−vf pp=hb:y/vb:a −autoq 6 

test 

产生各种设置样式. 

lavc[=quality:fps] 

用于DVB/DXR3的通过libavcodec进行YV12到MPEG1的快速 转 换. 比−vf=fame速度更快质量更好. 

quality: 1 − 31 固定qscale 32 − 固定比特率, 以kBits为单位 
fps: 指定输出帧速率(浮点数) (默认值: 0, 基于高度的自动 检测) 

fame 

用于DVB/DXR3的YV12到MPEG1的快速转换. 

dvbscale[=aspect] 

使用DVB卡的最佳缩放, X轴以硬件缩放而Y轴用软件缩放以保 持 长宽比. 

aspect: 控制长宽比, 按DVB_HEIGHT*ASPECTRATIO计算(默认 值: 576*4/3=768), 对 于16:9 的 电 视 把 它 设 置 为576*(16/9)=1024. 

只 应 该 与expand+scale 一 起 使 用: −vf lavc,expand=-1:576:-1:-1:1,scale=-1:0,dvbscale 

noise[=亮度[u][t|a][h][p]:色度[u][t|a][h][p]] 

增加噪音. 

<0−100>: 亮度噪音 
<0−100>: 色度噪音 
u: 均衡噪音 (否则使用高斯算法) 
t: 时间噪音 (噪音样式随帧改变) 
a: 平均随机噪音 (更平滑, 有点慢) 
h: 高质量 (看起来稍为好些, 有点慢) 
p: 在一个(半)规则样式中混入随机噪音 

denoise3d[=亮度:色度:时间] 

这个滤镜的目标是降低图像噪音生成平滑图像并让静止图像真正 静 止, (这有利于压缩). 它可以加0到3个参数. 如果你省略一 个参数, 将猜测一个合理的值. 


亮度: 


空间亮度浓度 (默认值 = 4) 

chroma: 

空间色度浓度 (默认值 = 3) 

time: 

时间强度 (默认值 = 6) 
hqdn3d[=luma:chroma:time] 

高精度/质量的denoise3d滤镜. 参数和使用方法相同. 

eq[=亮度:对比度] 

像硬件均衡器一样可以交互控制的软件均衡器, 用于不支持硬件 亮度对比度控制的显卡/驱动. 也可以用于MEncoder, 修复捕捉 质量差的电影, 或者略微降低对比度来掩盖加工痕迹或获得较低 的比特率. 初始值可以由命令行给出, 范围在-100 − 100之间. 

eq2[=gamma:对比度:亮度:色相:rg:gg:bg] 

另一个使用查表的软件均衡器(非常慢), 在简单的亮度, 对比度 和色相调整之外还支持gamma修正. 注意当所有gamma值都为1.0 时, 它使用与−vf eq一样的MMX优化代码. 参数以浮点值给 定. 参 数rg, gg, bg 是红, 绿, 兰组份的独立gamma值. 默认值 为1.0, 亮度=0.0. gamma的取值范围是0.1−10, 对比度是-2−2( 负数产生负片效果), 亮度是-1−1而色度为0−3. 

halfpack[=f] 

把4:2:0的planar YUV转换为4:2:2高度减半的packed格式, 降低 亮度采样率但保持所有色度样本. 用于输出到硬件缩放质量 差 或不可用的低分辨率显示设备. 也可以作为一个cpu消耗很低的 简单的仅用于亮度的交错/逐行扫描转换器. 默 认 情 况 下, halfpack在降低采样率的时候去两行的平均值. 可选的参数f可 以是0表示只使用偶数行, 或者1表示只使用奇数行. 

dint[=sense:level] 

检测并丢弃视频流中的隔行扫描的帧. 参数取 值 范 围 从0.0 到1.0 - 第一个(默认值 0.1)表示相邻点的相对差别, 第二个( 默认值 0.15)表示检测图像的哪一部分来决定是否把帧作为隔行 扫描丢弃. 

lavcdeint 

使用libavcodec的隔行/逐行扫描转换滤镜. 

unsharp=l|cWxH:amount[:l|cWxH:amount] 

反锐化掩饰/高斯模糊. 

l: 应用到亮度组份. 
c: 应用到色度组份. 
WxH: 矩 阵的宽度和高度, 两个方向都必须是奇数 (最小 = 3x3, 最大 = 13x11或者11x13, 一般在3x3到7x7之间) 
amount: 加到图像上的锐化/模糊的相对量 (正常范 围 应 该 是-1.5 − 1.5). <0: 模糊 >0: 锐化 

swapuv 

交换U & V平面. 

il=[d|i][s][:[d|i][s]] 

交错/逐行转换. 这个滤镜的目标是分区处理交错图像而不进行 逐行转换. 你可以用它处理你的交错图像的DVD, 不必交错图像 就 可以在电视上播放它. 当逐行处理(用后期处理滤镜)会永久 破坏交错图像(用平滑, 平均等等), 逐行处理会把帧分成两 块( 成 为半图像), 所以你需要分别进行(处理)他们然后把它们重新 交错. 

d: 逐行 
i: 隔行 
s: 交换域(交换偶数&奇数行) 

field[=n] 

使用步进算法解压交错图像中的单独域从而避免浪费CPU 时 间. 可 选 参 数n设置解压偶数域还是奇数域(取决于n是偶数还是奇 数). 

detc[=变量1=参数1:变量2=参数2:...] 

尝试反转"telecine"过程生成一个电影帧速率的干净的非交错的 视频流. 这个滤镜还在试验阶段但似乎可用. 你必须明白如果 你看电影的时候没有交错现象, 这个滤镜绝对没有用. 下面 的 参数(参考上面的语法)可以用来控制它的行为: 

dr: 设置掉帧模式. 0(默认)表示不掉帧以保持固定的输出帧 速率. 1表示总是如果前5帧没有掉帧或telecine合并 就 掉1 帧. 2 表 示总是保持准确的5:4的输入输出帧比率. (注意: MEncoder使用1!) 
am: 分析模式. 可用参数有0(使用fr=#设置的初始帧数的固定 样式), 和1(扩张性搜索telecine样式).默认值为1. 
fr: 设置初始帧数序列. 0-2是三个干净的渐进帧; 3和4是两 个交错帧. 默认值, -1, 表示"不在telecine序列中". 这 里 设置的数字是假想的电影开始前的帧数. 
tr0, tr1, tr2, tr3: 特定模式的初始值. 

telecine[=开始] 

使用3:2的"telecine"过程增加帧速率20%. mplayer的这个功能 应该不能正常工作, 不过它可以 用 于’mencoder -fps 29.97 -ofps 29.97 -vf telecine’. 两个fps选项都是必需的! (如 果错误将导致A/V不同步). 可选的开始参数告诉滤镜telecine格 式从哪里开始(0-3). 

tfields[=模式] 

临时域分离 -- 把域分成帧, 输出帧速率加倍. 0模式时, 滤镜 保持域不变, 输出结果高度减半. 1模式时, 图像的交错部分将 被 改 写 重 新 构 成 完 整高度的帧. 跟telecine滤镜一样, "tfields"只有用mencoder, 并且只有-fps和-ofps都设置成需要 的(加倍)的帧速率时才能正常工作! 

boxblur=半径:强度[:半径:强度] 

盒子模糊 

半径: 滤镜大小 
强度: 滤镜应用的强度 

sab=半径:强度:色差[:半径:强度:色差] 

外形识别模糊 

半径: 模糊滤镜强度(~0.1−4.0)(越大越慢) 
强度: 预过滤强度(~0.1−2.0) 
色差: 可以容忍的像素差别.(~0.1-100.0) 

smartblur=半径:强度:阀值[:半径:强度:阀值] 

只能模糊 

半径: 模糊滤镜强度(~0.1−5.0)(越大越慢) 
强度: 模糊(0.0−1.0)或锐化(-1.0−0.0) 
阀值: 过滤全部(0), 过滤单调区域(0−30)或过滤边界(-30−0) 

perspective=x0:y0:x1:y1:x2:y2:x3:y3:t 

形状修正 

x0,y0,...: 左上, 右上, 左下, 右下坐标 
t: 线性(0)或立方(1)重新采样 

2xsai 

使用双倍放大插入算符放大并平滑图像. 

1bpp 

1bpp位图到YUV/BGR 8/15/16/32转换 

down3dright[=行数] 

重新配置缩放立体图像. 解压两个立体域并把它们放在 一 起, 重新缩放以维持原始电影长宽比. 

行数: 从图像中部选择的行数(默认值: 12) 

bmovl=隐藏:不透明:<命名管道> 

从一个命名管道读取位图并把它们显示在窗口中. 

隐藏: 设置’隐藏’标记的默认值(布尔值) 
不透明: 切换alphablended(透明)和不透明(快速)模式标记 
命 名管道: 命名管道的路径/文件名(连接mplayer -vf bmovl 和控制程序的命名管道) 

命名管道命令有: 

RGBA32 width height xpos ypos alpha clear 
接受width*height*4字节的原始RGBA32数据 

ABGR32 width height xpos ypos alpha clear 
接受width*height*4字节的原始ABGR32 data. 

RGB24 width height xpos ypos alpha clear 
接受width*height*3字节的原始RGB32 data. 

BGR24 width height xpos ypos alpha clear 
接受width*height*3字节的原始BGR32 data. 

ALPHA width height xpos ypos alpha 
改变区域的alpha值 

CLEAR width height xpos ypos 
清除数据 

OPAQUE 
禁用所有alpha透明发送"ALPHA 0 0 0 0 0"可以重新打开 它. 

HIDE 
隐藏位图 

SHOW 
显示位图 

参数有: 

width, height: 图像/区域尺寸 
xpos, ypos: 位图传送的X/Y位置 
alpha: 设置alpha差别. 0标识原始值, 255使所有都不透明, -255使所有都透明. 如果你把它设为-255, 你可以随后发 送 一 个ALPHA命令序列吧区域设置为-225, -200, -175等等来获 得一个漂亮的淡入效果! ;)
clear: 传送前清楚帧缓冲. 1表示清除, 如果是0, 图像会被 传送到老图像上, 所以你不需要每次为屏幕小部分的变化都发 送1,8MB的RGBA32数据. 

−vfm <驱动1,驱动2,...> 

设置可用的视频驱动优先级列表, 按照它们在codecs.conf中的驱 动 名 称. 当都不可用是使用默认后备驱动. 

注意: 
如果编译了libdivxdecore支持,则odivx和divx4会包含同一个DivX4编解 码器, 但用不同的API调用它. 他们的区别和什么情况下应该使用 哪 一 个, 参考文档的DivX4部分. 
全部可用编解码器的完整列表参见−vfm help的输出. 

示例: 

−vfm ffmpeg,dshow,vfw 

先 尝试libavcodec, 然后是Directshow, 然后是VFW, 如果都不 行就使用其它后备编解码器. 

−vfm xanim 

先尝试XAnim编解码器 

−x <x> (仅用于MPLAYER) 

把图像缩放到宽度x(如果软件/硬件缩放可用). 禁用长宽比计算. 

−xvidopts <选项1:选项2:...> 

设置使用XviD解码时的附加参数. 

dr2 
激活直接渲染模式2. 

nodr2 

关闭直接渲染模式2. 

−xy <x> 

x<=8 

按因子<x>缩放图像. 

x>8 

把图像宽度设为<x>并计算图像高度以保持长宽比. 

−y <y> (仅用于MPLAYER) 

把图像缩放到高度y(如果软件/硬件缩放可用). 禁用长宽比 计 算..TP −zoom 在可能的情况下使用软件缩放. 可以用来指定−vf scale进行缩 放. 

注意: 
如果没有−zoom选项−vf scale将忽略−x / −y / −xy / −fs / −aspect等 选项. 

编码选项 ( 仅用于 MENCODER) 
−audio-density <1−50> 

每秒的音频块数(默认是两个0.5秒的长音频块). 

注意: 
仅用于CBR, VBR将忽略它因为它把每个包放在一个新块中. 

−audio-delay <0.0−...> 

设 置文件头中的音频延迟域. 默认值为0.0, 负数不能正常工作. 这不 是在编码的时候延迟音频, 而是播放器会把它作为默认的音频延迟, 你 可以不必用−delay选项. 

−audio-preload <0.0−2.0> 

设置音频缓冲间隔(默认值: 0.5秒). 

−divx4opts <选项1:选项2:...> 

当用DivX4编码时, 你可以由此设置参数. 
可用选项有: 

help 

获得帮助 

br=<参数> 

设置比特率以 

kbit<4−16000>或者 
bit<16001−24000000>为单位 

key=<参数> 

最大关键帧间隔(以帧为单位) 

deinterlace 

启用逐行扫描(别用它, DivX4很buggy) 

q=<1−5> 

质量(1−最快, 5−最好) 

min_quant=<1−31> 

最小量化值 

max_quant=<1−31> 

最大量化值 

rc_period=<参数> 

速率控制周期 

rc_reaction_period=<参数> 

速率控制反应周期 

rc_reaction_ratio=<参数> 

速率控制反应率 

crispness=<0−100> 

设置生硬/平滑 

pass=<1−2> 

用 这个选项你可以编码2 pass的DivX4文件. 先用pass=1编码, 然后以同样的参数, 用pass=2编码. 

vbrpass=<0−2> 

代替pass参数并使用XviD VBR代替DivX4 VBR. 可用选.
