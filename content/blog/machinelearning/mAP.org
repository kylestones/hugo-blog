#+TITLE:          mAP
#+AUTHOR:         Kyle Three Stones
#+DATE:           <2018-11-24 Sat>
#+EMAIL:          kyleemail@163.com
#+OPTIONS:        H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t f:t tex:t
#+TAGS:           性能测量, 深度学习
#+CATEGORIES:     深度学习


** 词语解释

mAP 是 Mean Average Precision 的缩写，是检测算法的评价指标。这个名词中包含两个平均，其中 Mean 取的是不同类别的平均值，
Average 取的是不同的召回率的平均值，当然计算的是正确率 Precision 的平均值。另外 coco 数据集还取了不同 IoU 阈值的平均。

另外想说一下，recall 这个单词被国内广泛翻译称召回率，大多数人根本无法从字面理解这个召回率到底是个什么鬼。而周志华老师在
其西瓜书中，将 recall 翻译成查全率，将 precision 翻译成查准率。一下子直观了很多。查准率表示模型查找到结果的准确率，就是
你说这些都是好瓜，但其中真正是好瓜的比例；查全率表示模型找到所有正样本的比例，就是说在所有好瓜中，你判别出来了多少。


** 计算方法

不同的数据集有不同的 mAP 计算方法。主要包括 PASCAL 07 、PASCAL 10、COCO 数据集的计算方法较常用。

PASCAL 数据集使用的都是固定的 IoU 阈值（默认为 0.5），就是只要预测的 box 和真实的 box 的 IoU 大于等于 0.5 ，就认为检测正
确（当然类别也必须正确）。所不同的是 PASCAL 07 只计算 11 个查准率 precision 的平均值，而 PASCAL 10 则要求所有的检测结果
都用于计算 AP 。

PASCAL 07 只计算查全率 recall 在 0.1-1 之间，以 0.01 为间隔，共 11 个点所对应的查准率的平均值。而 PASCAL 10 则在计算 PR
曲线的 AUC 。coco 数据集则会分别计算 IoU 为 0.5 到 0.95 间隔为 0.05 ，共 10 个不同阈值下的 PR 曲线的 AUC 。

通用步骤
1. 将检测框按照 confidence （就是预测这个框是某个目标的概率）从大到小排序
1. 依据该检测框与 ground truth box IoU 是否大于指定的阈值，判定其是 TP 还是 FP
1. 逐个累加 TP 和 FP ，分别计算累加到每一个 box 时的查准率 P 和查全率 R

PASCAL 07
1. 计算查全率分别在 0.1:1:0.01 共 11 个点所对应的 11 个查全率的平均值就是 AP
1. 取查全率所对应的查准率为大于等于该查全率所对应的查准率中，最大的那个；说是为了减少波动，不是很理解
1. 上述计算了一个类别的 AP ，分别计算所有类别的 AP ，然后取平均值即可得到 mAP

PASCAL 10
1. 只要召回率发生变化，便累加一个矩形的面积，该矩形由查全率和查准率的变化值组成
1. 同样，取查全率所对应的查准率为大于等于该查全率所对应的查准率中，最大的那个
1. 相同的方法求得所有类别的 AP ，然后取平均

coco
1. 逐个计算 IOU 阈值为 0.5:1:0.05 下的 AP
1. 相同的方法求得所有类别的 AP ，然后取平均


如果有多个 box 对应一个 gtbb ，只取 IOU 最大的那个为 TP ，其余的为 FP


** 牢骚

国内的小伙伴都还是很勤奋的，网上可以搜索到很多很多写 mAP 的博客文章。但是挺多都是直接转载，有一些小伙伴在看了许多别人的
博客之后，增加自己的一点心得体会，自己写一篇，但明显可以看到的是，写的文章基本上从头到尾都是从不同的地方摘抄过来的，也就
是说整篇文章都是在堆砌别人的东西，并且会以其中的某一篇的为基本框架。文章的作者很可能并没有对该知识点有很好的把握，东拼西
凑的过程中还很有可能有一些细节会有一些冲突，也有一些点没有点破。经常会让读者感觉云里来雾里去，无法得其要领，白白浪费了很
多时间，关键也会打击自己的自信心，怎么看了这么多，还是不懂?!@#$%^&*，我咋这么蠢!!!!。当然也有很多大牛的文章都是亲力亲为，
写的很不错，但占总体的比例并不高。

反观那些写的比较好的英文文章，作者是在对这个概念整体和细节都了解很透彻的情况下，自己思考设计，应该以什么样的方式来讲解；
怎样设计例子，能够较好的覆盖这个知识点；怎样由易到难一点一点的讲解这个知识点。整个文章让人读下来感觉很舒服，时不时会发出：
“奥...原来是这个意思”的声音。可以让读者快速理解这个概念。

当然也有一些小伙伴借口说英文不好，不想看英文的。当然那些经典的文章会有相应的中文翻译，但翻译的质量参差不齐，有些点会翻译
的不确切，甚至会有出错的地方。强烈建议看英文原版的，但大多数人总感觉英文不好，会看的比较慢，会浪费时间，其实如果先看中文
翻译的，看了很多依然没有搞懂，最后只能稀里糊涂的理解，或者再去看英文原版的。这样只会浪费更多的时间。在此主要在提醒自己，
因为我就经常这么做-_-。

下面两个文章写的都非常非常的好，建议直接阅读，不要浪费时间看我在这里废话。


** 参考文档
1. [[https://github.com/rafaelpadilla/Object-Detection-Metrics][Object-Detection-Metrics]] 
2. [[http://tarangshah.com/blog/2018-01-27/what-is-map-understanding-the-statistic-of-choice-for-comparing-object-detection-models/][ What is Mean Average Precision]]


** 参考代码
1. [[https://github.com/matterport/Mask_RCNN/blob/master/mrcnn/utils.py][Mask RCNN TensorFlow]]
2. [[https://github.com/facebookresearch/Detectron/blob/05d04d3a024f0991339de45872d02f2f50669b3d/lib/datasets/voc_eval.py][MaskRCNN Detectron]]
